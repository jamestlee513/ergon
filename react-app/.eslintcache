[{"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/index.js":"1","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/App.js":"2","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/services/auth.js":"3","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/LoginForm.js":"4","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/SignupForm.js":"5","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/SignUpForm.js":"6","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/NavBar.js":"7","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/LoginSigninPage.js":"8","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/Auth/LoginForm.js":"9","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/Auth/SignUpForm.js":"10","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/Auth/LoginSigninPage.js":"11","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/HomePage.js":"12","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/services/AuthProvider.js":"13"},{"size":412,"mtime":1610144319351,"results":"14","hashOfConfig":"15"},{"size":1779,"mtime":1610388785477,"results":"16","hashOfConfig":"15"},{"size":1074,"mtime":1610066881301,"results":"17","hashOfConfig":"15"},{"size":5712,"mtime":1610154110641,"results":"18","hashOfConfig":"15"},{"size":247,"mtime":1610065958844,"results":"19","hashOfConfig":"15"},{"size":5859,"mtime":1610154043262,"results":"20","hashOfConfig":"15"},{"size":1502,"mtime":1610388017921,"results":"21","hashOfConfig":"15"},{"size":1314,"mtime":1610146450163,"results":"22","hashOfConfig":"15"},{"size":6024,"mtime":1610388339546,"results":"23","hashOfConfig":"15"},{"size":6143,"mtime":1610388239353,"results":"24","hashOfConfig":"15"},{"size":1274,"mtime":1610388133761,"results":"25","hashOfConfig":"15"},{"size":1641,"mtime":1610391046824,"results":"26","hashOfConfig":"15"},{"size":150,"mtime":1610387863486,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"djjv3l",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/index.js",[],["58","59"],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/App.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/services/auth.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/LoginForm.js",["60"],"import React, { useState } from 'react';\nimport { Box, Button, Divider, Flex, FormControl, Input, InputGroup, InputLeftElement, ListItem, Stack, toast, UnorderedList, useToast } from '@chakra-ui/react'\nimport { EmailIcon, LockIcon } from '@chakra-ui/icons';\nimport { login } from \"../../services/auth\";\n\nfunction LoginForm({ setAuthenticated }) {\n\n    const toast = useToast();\n    const [errors, setErrors] = useState([]);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loginLoading, setLoginLoading] = useState(false);\n    const [demoLoading, setDemoLoading] = useState(false);\n\n    const loginUser = async e => {\n        e.preventDefault();\n        setLoginLoading(true);\n        const user = await login(email, password);\n        if (!user.errors) {\n            setAuthenticated(true);\n            toast({\n                title: \"Login success.\",\n                description: \"Welcome back!\",\n                status: \"success\",\n                duration: \"5000\",\n                isClosable: true\n            })\n        } else {\n            setErrors(user.errors);\n        }\n        setLoginLoading(false);\n    }\n\n    const loginDemo = async e => {\n        e.preventDefault();\n        setDemoLoading(true);\n        const user = await login(\"demo@demo.com\", \"password\");\n        if (!user.errors) {\n            setAuthenticated(true);\n        } else {\n            setErrors(user.errors);\n        }\n        setDemoLoading(false);\n    }\n\n\n    return (\n        <Box bg='gray.50' w='300px' h='400px' p={3} rounded='md'>\n            <Flex justify=\"center\" align=\"center\">\n\n                <Stack spacing={4}>\n                    {errors.length > 0 && (\n                        <>\n                            <UnorderedList>\n                                {errors.map((error, idx) =>\n                                    <ListItem key={idx}>{error}</ListItem>\n                                )}\n                            </UnorderedList>\n                            <Divider />\n                        </>\n                    )}\n                    <form type=\"submit\" onSubmit={loginUser}>\n                        <Stack spacing={3}>\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<EmailIcon />} />\n                                    <Input\n                                        type=\"email\"\n                                        placeholder=\"email@example.com\"\n                                        value={email}\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<LockIcon />} />\n                                    <Input\n                                        type=\"password\"\n                                        placeholder=\"Password\"\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <Button\n                                type=\"submit\"\n                                isLoading={loginLoading}\n                            >\n                                Log in\n                        </Button>\n                            <Button\n                                type=\"submit\"\n                                isLoading={demoLoading}\n                                onClick={loginDemo}\n                            >\n                                Log in as demo user\n                        </Button>\n                        </Stack>\n                    </form>\n                </Stack>\n            </Flex>\n        </Box>\n    )\n\n    // return (\n    //     <>\n    //         {errors.length > 0 && (\n    //             <div>\n    //                 <div>We encoutered the following errors:</div>\n    //                 {errors.map((error, idx) =>\n    //                     <div key={idx}>\n    //                         {error}\n    //                     </div>\n    //                 )}\n    //             </div>\n    //         )}\n    //         <form>\n    //             <input\n    //                 type=\"email\"\n    //                 placeholder=\"example@gmail.com\"\n    //                 value={email}\n    //                 onChange={e => setEmail(e.target.value)}\n    //             />\n    //             <input\n    //                 type=\"password\"\n    //                 placeholder=\"password\"\n    //                 value={password}\n    //                 onChange={e => setPassword(e.target.value)}\n    //             />\n    //             <button type=\"submit\" onClick={loginUser}>Log In</button>\n    //             <button type=\"submit\" onClick={loginDemo}>Log in as Demo User</button>\n    //         </form>\n    //     </>\n    // )\n}\n\nexport default LoginForm;",["61","62"],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/SignupForm.js",["63","64","65"],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/SignUpForm.js",["66"],"import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Box, Button, Divider, Flex, FormControl, Input, InputGroup, InputLeftElement, ListItem, Stack, UnorderedList, useToast } from '@chakra-ui/react'\nimport { EmailIcon, InfoIcon, LockIcon } from '@chakra-ui/icons';\nimport { signUp } from \"../../services/auth\";\n\nfunction SignUpForm({ setAuthenticated }) {\n\n    const toast = useToast();\n    const [errors, setErrors] = useState([]);\n    const [firstname, setFirstname] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [signupLoading, setSignupLoading] = useState(false);\n\n    const signUpUser = async e => {\n        e.preventDefault();\n        setSignupLoading(true);\n        const user = await signUp(\n            firstname,\n            lastname,\n            username,\n            email,\n            password\n        );\n        if (!user.errors) {\n            setAuthenticated(true);\n            toast({\n                title: \"Account created.\",\n                description: \"Account signup was successful!\",\n                status: \"success\",\n                duration: \"5000\",\n                isClosable: true\n            })\n        } else {\n            setErrors(user.errors);\n        }\n        setSignupLoading(false);\n    }\n\n    return (\n        <Box bg='gray.50' w='300px' h='400px' p={3} rounded='md'>\n            <Flex justify=\"center\" align=\"center\">\n                <Stack spacing={4}>\n                    {errors.length > 0 && (\n                        <>\n                            <UnorderedList>\n                                {errors.map((error, idx) =>\n                                    <ListItem key={idx}>{error}</ListItem>\n                                )}\n                            </UnorderedList>\n                            <Divider />\n                        </>\n                    )}\n                    <form type=\"submit\" onSubmit={signUpUser}>\n                        <Stack spacing={3}>\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<InfoIcon />} />\n                                    <Input\n                                        type=\"name\"\n                                        placeholder=\"First name\"\n                                        value={firstname}\n                                        onChange={e => setFirstname(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<InfoIcon />} />\n                                    <Input\n                                        type=\"name\"\n                                        placeholder=\"Last name\"\n                                        value={lastname}\n                                        onChange={e => setLastname(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <Divider />\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<InfoIcon />} />\n                                    <Input\n                                        type=\"name\"\n                                        placeholder=\"Username\"\n                                        value={username}\n                                        onChange={e => setUsername(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<EmailIcon />} />\n                                    <Input\n                                        type=\"email\"\n                                        placeholder=\"email@example.com\"\n                                        value={email}\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<LockIcon />} />\n                                    <Input\n                                        type=\"password\"\n                                        placeholder=\"Password\"\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <Button\n                                type=\"submit\"\n                                isLoading={signupLoading}\n                            >\n                                Sign up\n                        </Button>\n                        </Stack>\n                    </form>\n                </Stack>\n            </Flex>\n        </Box>\n    )\n}\n\nexport default SignUpForm;","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/NavBar.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/LoginSigninPage.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/Auth/LoginForm.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/Auth/SignUpForm.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/Auth/LoginSigninPage.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/HomePage.js",["67","68","69"],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/services/AuthProvider.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":2,"column":105,"nodeType":"76","messageId":"77","endLine":2,"endColumn":110},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},{"ruleId":"74","severity":1,"message":"80","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"81","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":18},{"ruleId":"74","severity":1,"message":"82","line":3,"column":10,"nodeType":"76","messageId":"77","endLine":3,"endColumn":16},{"ruleId":"74","severity":1,"message":"81","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":18},{"ruleId":"74","severity":1,"message":"83","line":2,"column":10,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"74","severity":1,"message":"84","line":2,"column":31,"nodeType":"76","messageId":"77","endLine":2,"endColumn":41},{"ruleId":"85","severity":1,"message":"86","line":27,"column":8,"nodeType":"87","endLine":27,"endColumn":10,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar",["89"],["90"],"'useState' is defined but never used.","'Redirect' is defined but never used.","'signUp' is defined but never used.","'Box' is defined but never used.","'SimpleGrid' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth.authenticated', 'isFirstVisit', 'setIsFirstVisit', and 'toast'. Either include them or remove the dependency array. If 'setIsFirstVisit' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [auth.authenticated, isFirstVisit, setIsFirstVisit, toast]",{"range":"94","text":"95"},[925,927],"[auth.authenticated, isFirstVisit, setIsFirstVisit, toast]"]