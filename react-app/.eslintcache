[{"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/index.js":"1","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/App.js":"2","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/services/auth.js":"3","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/LoginForm.js":"4","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/SignupForm.js":"5","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/SignUpForm.js":"6","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/NavBar.js":"7","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/LoginSigninPage.js":"8","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/Auth/LoginForm.js":"9","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/Auth/SignUpForm.js":"10","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/Auth/LoginSigninPage.js":"11","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/HomePage.js":"12","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/services/AuthProvider.js":"13","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/PomodoroTimer.js":"14","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/services/util.js":"15","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/TodoList.js":"16"},{"size":412,"mtime":1610144319351,"results":"17","hashOfConfig":"18"},{"size":1633,"mtime":1610484858373,"results":"19","hashOfConfig":"18"},{"size":1371,"mtime":1610562892449,"results":"20","hashOfConfig":"18"},{"size":5712,"mtime":1610154110641,"results":"21","hashOfConfig":"18"},{"size":247,"mtime":1610065958844,"results":"22","hashOfConfig":"18"},{"size":5859,"mtime":1610154043262,"results":"23","hashOfConfig":"18"},{"size":1510,"mtime":1610474592985,"results":"24","hashOfConfig":"18"},{"size":1314,"mtime":1610146450163,"results":"25","hashOfConfig":"18"},{"size":5043,"mtime":1610559123906,"results":"26","hashOfConfig":"18"},{"size":6143,"mtime":1610388239353,"results":"27","hashOfConfig":"18"},{"size":1274,"mtime":1610388133761,"results":"28","hashOfConfig":"18"},{"size":1757,"mtime":1610472612253,"results":"29","hashOfConfig":"18"},{"size":150,"mtime":1610387863486,"results":"30","hashOfConfig":"18"},{"size":2081,"mtime":1610471906390,"results":"31","hashOfConfig":"18"},{"size":462,"mtime":1610393176049,"results":"32","hashOfConfig":"18"},{"size":363,"mtime":1610472798982,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"djjv3l",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"45"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/index.js",[],["73","74"],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/App.js",["75"],"import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\"\nimport { authenticate } from \"./services/auth\";\nimport { Flex } from \"@chakra-ui/react\";\nimport NavBar from \"./components/NavBar\";\nimport LoginSigninPage from \"./components/Auth/LoginSigninPage\";\nimport HomePage from \"./components/HomePage\";\nimport { AuthProvider } from \"./services/AuthProvider\";\n\nfunction App() {\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [isFirstVisit, setIsFistVisit] = useState(true);\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    (async () => {\n      const user = await authenticate();\n      if (!user.errors) {\n        setAuthenticated(true);\n        setUser(user);\n      } else {\n        setUser({});\n      }\n      setLoaded(true);\n    })();\n  }, []);\n\n  return loaded && (\n    <AuthProvider value={{ authenticated, setAuthenticated }}>\n      <Flex direction=\"column\" align=\"center\" justify=\"center\">\n        <NavBar />\n        <Switch>\n          <Route exact path=\"/\">\n            <Flex justify=\"center\" align=\"center\" w=\"100%\" h=\"93vh\">\n              <HomePage isFirstVisit={isFirstVisit} setIsFirstVisit={setIsFistVisit} />\n            </Flex>\n          </Route>\n          <Route path=\"/signin\">\n            <Flex justify=\"center\" align=\"center\" w=\"100%\" h=\"93vh\">\n              <LoginSigninPage />\n            </Flex>\n          </Route>\n          <Route path='/settings'>\n            <div>Test route here</div>\n          </Route>\n        </Switch>\n      </Flex>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/services/auth.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/LoginForm.js",["76"],"import React, { useState } from 'react';\nimport { Box, Button, Divider, Flex, FormControl, Input, InputGroup, InputLeftElement, ListItem, Stack, toast, UnorderedList, useToast } from '@chakra-ui/react'\nimport { EmailIcon, LockIcon } from '@chakra-ui/icons';\nimport { login } from \"../../services/auth\";\n\nfunction LoginForm({ setAuthenticated }) {\n\n    const toast = useToast();\n    const [errors, setErrors] = useState([]);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loginLoading, setLoginLoading] = useState(false);\n    const [demoLoading, setDemoLoading] = useState(false);\n\n    const loginUser = async e => {\n        e.preventDefault();\n        setLoginLoading(true);\n        const user = await login(email, password);\n        if (!user.errors) {\n            setAuthenticated(true);\n            toast({\n                title: \"Login success.\",\n                description: \"Welcome back!\",\n                status: \"success\",\n                duration: \"5000\",\n                isClosable: true\n            })\n        } else {\n            setErrors(user.errors);\n        }\n        setLoginLoading(false);\n    }\n\n    const loginDemo = async e => {\n        e.preventDefault();\n        setDemoLoading(true);\n        const user = await login(\"demo@demo.com\", \"password\");\n        if (!user.errors) {\n            setAuthenticated(true);\n        } else {\n            setErrors(user.errors);\n        }\n        setDemoLoading(false);\n    }\n\n\n    return (\n        <Box bg='gray.50' w='300px' h='400px' p={3} rounded='md'>\n            <Flex justify=\"center\" align=\"center\">\n\n                <Stack spacing={4}>\n                    {errors.length > 0 && (\n                        <>\n                            <UnorderedList>\n                                {errors.map((error, idx) =>\n                                    <ListItem key={idx}>{error}</ListItem>\n                                )}\n                            </UnorderedList>\n                            <Divider />\n                        </>\n                    )}\n                    <form type=\"submit\" onSubmit={loginUser}>\n                        <Stack spacing={3}>\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<EmailIcon />} />\n                                    <Input\n                                        type=\"email\"\n                                        placeholder=\"email@example.com\"\n                                        value={email}\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<LockIcon />} />\n                                    <Input\n                                        type=\"password\"\n                                        placeholder=\"Password\"\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <Button\n                                type=\"submit\"\n                                isLoading={loginLoading}\n                            >\n                                Log in\n                        </Button>\n                            <Button\n                                type=\"submit\"\n                                isLoading={demoLoading}\n                                onClick={loginDemo}\n                            >\n                                Log in as demo user\n                        </Button>\n                        </Stack>\n                    </form>\n                </Stack>\n            </Flex>\n        </Box>\n    )\n\n    // return (\n    //     <>\n    //         {errors.length > 0 && (\n    //             <div>\n    //                 <div>We encoutered the following errors:</div>\n    //                 {errors.map((error, idx) =>\n    //                     <div key={idx}>\n    //                         {error}\n    //                     </div>\n    //                 )}\n    //             </div>\n    //         )}\n    //         <form>\n    //             <input\n    //                 type=\"email\"\n    //                 placeholder=\"example@gmail.com\"\n    //                 value={email}\n    //                 onChange={e => setEmail(e.target.value)}\n    //             />\n    //             <input\n    //                 type=\"password\"\n    //                 placeholder=\"password\"\n    //                 value={password}\n    //                 onChange={e => setPassword(e.target.value)}\n    //             />\n    //             <button type=\"submit\" onClick={loginUser}>Log In</button>\n    //             <button type=\"submit\" onClick={loginDemo}>Log in as Demo User</button>\n    //         </form>\n    //     </>\n    // )\n}\n\nexport default LoginForm;",["77","78"],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/SignupForm.js",["79","80","81"],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/SignUpForm.js",["82"],"import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Box, Button, Divider, Flex, FormControl, Input, InputGroup, InputLeftElement, ListItem, Stack, UnorderedList, useToast } from '@chakra-ui/react'\nimport { EmailIcon, InfoIcon, LockIcon } from '@chakra-ui/icons';\nimport { signUp } from \"../../services/auth\";\n\nfunction SignUpForm({ setAuthenticated }) {\n\n    const toast = useToast();\n    const [errors, setErrors] = useState([]);\n    const [firstname, setFirstname] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [signupLoading, setSignupLoading] = useState(false);\n\n    const signUpUser = async e => {\n        e.preventDefault();\n        setSignupLoading(true);\n        const user = await signUp(\n            firstname,\n            lastname,\n            username,\n            email,\n            password\n        );\n        if (!user.errors) {\n            setAuthenticated(true);\n            toast({\n                title: \"Account created.\",\n                description: \"Account signup was successful!\",\n                status: \"success\",\n                duration: \"5000\",\n                isClosable: true\n            })\n        } else {\n            setErrors(user.errors);\n        }\n        setSignupLoading(false);\n    }\n\n    return (\n        <Box bg='gray.50' w='300px' h='400px' p={3} rounded='md'>\n            <Flex justify=\"center\" align=\"center\">\n                <Stack spacing={4}>\n                    {errors.length > 0 && (\n                        <>\n                            <UnorderedList>\n                                {errors.map((error, idx) =>\n                                    <ListItem key={idx}>{error}</ListItem>\n                                )}\n                            </UnorderedList>\n                            <Divider />\n                        </>\n                    )}\n                    <form type=\"submit\" onSubmit={signUpUser}>\n                        <Stack spacing={3}>\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<InfoIcon />} />\n                                    <Input\n                                        type=\"name\"\n                                        placeholder=\"First name\"\n                                        value={firstname}\n                                        onChange={e => setFirstname(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<InfoIcon />} />\n                                    <Input\n                                        type=\"name\"\n                                        placeholder=\"Last name\"\n                                        value={lastname}\n                                        onChange={e => setLastname(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <Divider />\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<InfoIcon />} />\n                                    <Input\n                                        type=\"name\"\n                                        placeholder=\"Username\"\n                                        value={username}\n                                        onChange={e => setUsername(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<EmailIcon />} />\n                                    <Input\n                                        type=\"email\"\n                                        placeholder=\"email@example.com\"\n                                        value={email}\n                                        onChange={e => setEmail(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <FormControl isRequired>\n                                <InputGroup>\n                                    <InputLeftElement children={<LockIcon />} />\n                                    <Input\n                                        type=\"password\"\n                                        placeholder=\"Password\"\n                                        value={password}\n                                        onChange={e => setPassword(e.target.value)}\n                                    />\n                                </InputGroup>\n                            </FormControl>\n                            <Button\n                                type=\"submit\"\n                                isLoading={signupLoading}\n                            >\n                                Sign up\n                        </Button>\n                        </Stack>\n                    </form>\n                </Stack>\n            </Flex>\n        </Box>\n    )\n}\n\nexport default SignUpForm;","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/NavBar.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/auth/LoginSigninPage.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/Auth/LoginForm.js",["83","84","85"],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/Auth/SignUpForm.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/Auth/LoginSigninPage.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/HomePage.js",["86"],"import React, { useContext, useEffect } from 'react';\nimport { Grid, GridItem, useToast } from '@chakra-ui/react';\nimport AuthContext from '../services/AuthProvider';\nimport PomodoroTimer from './PomodoroTimer';\nimport TodoList from './TodoList';\n\n\nfunction HomePage({ isFirstVisit, setIsFirstVisit }) {\n\n    const auth = useContext(AuthContext);\n    const toast = useToast();\n\n    useEffect(() => {\n        if (!auth.authenticated && isFirstVisit) {\n            toast({\n                title: \"Welcome to Ergon!\",\n                description: \"Feel free to use the website, however your personal settings will not save unless you are logged in!\",\n                duration: \"10000\",\n                isClosable: true\n            })\n        } else if (auth.authenticated && isFirstVisit) {\n            toast({\n                title: \"Welcome back to Ergon!\",\n                duration: \"5000\",\n                isClosable: true\n            })\n        }\n        setIsFirstVisit(false);\n    }, [])\n\n    return (\n        <Grid\n            h=\"100%\"\n            w=\"100%\"\n            gridTemplateColumns=\"6fr 4fr 4fr 3fr\"\n            gridTemplateRows=\"5fr 7fr 80px\"\n            border=\"1px\"\n            borderColor=\"red\"\n        >\n            <GridItem border=\"1px\" colSpan={3}>\n                <PomodoroTimer />\n            </GridItem>\n            <GridItem border=\"1px\" rowSpan={3}>Calendar Component</GridItem>\n            <GridItem border=\"1px\" >\n                <TodoList />\n            </GridItem>\n            <GridItem border=\"1px\" >Memo Component</GridItem>\n            <GridItem border=\"1px\" >Friends Component (Optional)</GridItem>\n            <GridItem border=\"1px\" colSpan={3}>Playbar Component</GridItem>\n        </Grid>\n    )\n}\n\nexport default HomePage;","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/services/AuthProvider.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/PomodoroTimer.js",["87","88"],"import { Box, Button, ButtonGroup, Flex } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport { secondsToTime } from '../services/util';\nfunction PomodoroTimer() {\n    const WORKTIME = 1500;\n    const BREAKTIME = 300;\n\n    const [timer, setTimer] = useState(WORKTIME);\n    const [breakTimer, setBreakTimer] = useState(BREAKTIME);\n    const [isBreak, setIsBreak] = useState(false);\n    const [isTimerOn, setIsTimerOn] = useState(false);\n    const [timerInterval, setTimerInterval] = useState(null);\n\n    useEffect(() => {\n        if (isTimerOn) {\n            const interval = setInterval(() => {\n                !isBreak ? setTimer(prevTime => prevTime - 1) :\n                    setBreakTimer(prevTime => prevTime - 1)\n            }, 1000)\n            setTimerInterval(interval);\n            return () => {\n                clearInterval(interval);\n            }\n        } else {\n            clearInterval(timerInterval);\n        }\n    }, [isTimerOn])\n\n    useEffect(() => {\n        setIsTimerOn(false);\n        setTimer(WORKTIME);\n        setBreakTimer(BREAKTIME);\n        clearInterval(timerInterval);\n    }, [isBreak])\n\n    const handleReset = () => {\n        setIsTimerOn(false);\n        if (!isBreak) {\n            setTimer(WORKTIME);\n        } else {\n            setBreakTimer(BREAKTIME);\n        }\n    }\n\n    return (\n        <Flex direction=\"column\" align=\"center\" justify=\"space-around\" h=\"100%\">\n            <Box\n                h=\"40%\"\n                p={4}\n                fontSize=\"60pt\"\n            >{isBreak ? secondsToTime(breakTimer) : secondsToTime(timer)}</Box>\n            <ButtonGroup>\n                <Button onClick={() => setIsTimerOn(true)}>Start</Button>\n                <Button onClick={() => setIsTimerOn(false)}>Stop</Button>\n                <Button onClick={handleReset}>Reset</Button>\n                <Button onClick={() => setIsBreak(prevState => !prevState)}>\n                    {isBreak ? \"Work\" : \"Break\"}\n                </Button>\n            </ButtonGroup>\n        </Flex >\n    )\n}\n\nexport default PomodoroTimer;","/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/services/util.js",[],"/Users/jameslee/Desktop/Aa-files/projects/ergon/react-app/src/components/TodoList.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":14,"column":10,"nodeType":"95","messageId":"96","endLine":14,"endColumn":14},{"ruleId":"93","severity":1,"message":"97","line":2,"column":105,"nodeType":"95","messageId":"96","endLine":2,"endColumn":110},{"ruleId":"89","replacedBy":"98"},{"ruleId":"91","replacedBy":"99"},{"ruleId":"93","severity":1,"message":"100","line":1,"column":17,"nodeType":"95","messageId":"96","endLine":1,"endColumn":25},{"ruleId":"93","severity":1,"message":"101","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":18},{"ruleId":"93","severity":1,"message":"102","line":3,"column":10,"nodeType":"95","messageId":"96","endLine":3,"endColumn":16},{"ruleId":"93","severity":1,"message":"101","line":2,"column":10,"nodeType":"95","messageId":"96","endLine":2,"endColumn":18},{"ruleId":"93","severity":1,"message":"103","line":6,"column":8,"nodeType":"95","messageId":"96","endLine":6,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":23,"column":15,"nodeType":"95","messageId":"96","endLine":23,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":43,"column":15,"nodeType":"95","messageId":"96","endLine":43,"endColumn":19},{"ruleId":"104","severity":1,"message":"105","line":29,"column":8,"nodeType":"106","endLine":29,"endColumn":10,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":27,"column":8,"nodeType":"106","endLine":27,"endColumn":19,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"110","line":34,"column":8,"nodeType":"106","endLine":34,"endColumn":17,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'toast' is defined but never used.",["112"],["113"],"'useState' is defined but never used.","'Redirect' is defined but never used.","'signUp' is defined but never used.","'Cookies' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth.authenticated', 'isFirstVisit', 'setIsFirstVisit', and 'toast'. Either include them or remove the dependency array. If 'setIsFirstVisit' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["114"],"React Hook useEffect has missing dependencies: 'isBreak' and 'timerInterval'. Either include them or remove the dependency array.",["115"],"React Hook useEffect has a missing dependency: 'timerInterval'. Either include it or remove the dependency array.",["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [auth.authenticated, isFirstVisit, setIsFirstVisit, toast]",{"range":"123","text":"124"},"Update the dependencies array to be: [isBreak, isTimerOn, timerInterval]",{"range":"125","text":"126"},"Update the dependencies array to be: [isBreak, timerInterval]",{"range":"127","text":"128"},[988,990],"[auth.authenticated, isFirstVisit, setIsFirstVisit, toast]",[970,981],"[isBreak, isTimerOn, timerInterval]",[1142,1151],"[isBreak, timerInterval]"]